rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidUser() {
      return isAuthenticated() && 
             request.auth.token.email_verified == true;
    }
    
    function isValidUserData() {
      return request.resource.data.keys().hasAll(['id', 'email', 'displayName', 'role', 'personalLibrary']) &&
             request.resource.data.id == request.auth.uid &&
             request.resource.data.email == request.auth.token.email &&
             request.resource.data.role in ['user', 'admin'] &&
             request.resource.data.personalLibrary.keys().hasAll(['bookmarkedPrayers']);
    }
    
    // Users collection - users can only access their own documents
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId) && isValidUserData();
      allow update: if isOwner(userId) && 
                       request.resource.data.id == resource.data.id &&
                       request.resource.data.email == resource.data.email;
      allow delete: if isOwner(userId);
    }
    
    // Prayer categories - read-only for all users (public content)
    match /prayerCategories/{categoryId} {
      allow read: if true; // Public prayer content
      allow write: if false; // Only admin SDK can write
    }
    
    // Prayers - read-only for all users (public content)
    match /prayers/{prayerId} {
      allow read: if true; // Public prayer content
      allow write: if false; // Only admin SDK can write
    }
    
    // User statistics - private to each user
    match /userStats/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // User recent prayers - private to each user
    match /userRecent/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Verses of the day - read-only for all users (public content)
    match /versesOfTheDay/{date} {
      allow read: if true; // Public spiritual content
      allow write: if false; // Only admin SDK can write
    }
    
    // Notifications - users can only read their own notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid;
      allow write: if false; // Only server functions can write
    }
    
    // User bookmarks subcollection (alternative structure if needed)
    match /users/{userId}/bookmarks/{bookmarkId} {
      allow read, write: if isOwner(userId);
    }
    
    // User prayer history subcollection (alternative structure if needed)
    match /users/{userId}/prayerHistory/{historyId} {
      allow read, write: if isOwner(userId);
    }
    
    // Analytics collection - read-only for authenticated users
    match /analytics/{analyticsId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only server functions can write
    }
    
    // Admin collection - no access for regular users
    match /admin/{document=**} {
      allow read, write: if false; // Only admin SDK
    }
    
    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// Storage rules for Firebase Storage
// Note: This should be placed in Firebase Storage rules, not Firestore rules
/*
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // User profile images
    match /users/{userId}/profile/{allPaths=**} {
      allow read, write: if request.auth != null && 
                           request.auth.uid == userId &&
                           request.resource.size < 5 * 1024 * 1024 && // 5MB limit
                           request.resource.contentType.matches('image/.*');
    }
    
    // Prayer images - read-only for authenticated users
    match /prayers/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can upload
    }
    
    // Category icons - read-only for authenticated users
    match /categories/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can upload
    }
    
    // Public assets - read-only for all
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false; // Only admin can upload
    }
    
    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
*/